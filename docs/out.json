{
	"id": 0,
	"name": "@augu/collections",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Collection",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) Noelware",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 2,
					"name": "Collection",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a class to hold key-value pairs using [[Collection]]. This is a extension\nof [Map] to add Array-like functions and a update builder."
					},
					"children": [
						{
							"id": 4,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 5,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 6,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 7,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 8,
											"name": "entries",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "array",
															"elementType": {
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "reference",
																			"name": "K"
																		},
																		{
																			"type": "reference",
																			"name": "V"
																		}
																	]
																}
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								},
								{
									"id": 9,
									"name": "new Collection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 10,
											"name": "K",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 11,
											"name": "V",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 12,
											"name": "iterable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "typeOperator",
														"operator": "readonly",
														"target": {
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"name": "K"
																},
																{
																	"type": "reference",
																	"name": "V"
																}
															]
														}
													}
												],
												"name": "Iterable"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map<K, V>.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map<K, V>.constructor"
							}
						},
						{
							"id": 140,
							"name": "[Symbol.toStringTag]",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "C:/Users/cutie/AppData/Roaming/npm/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 135,
									"character": 33
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.__@toStringTag"
							}
						},
						{
							"id": 13,
							"name": "constructor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 67,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 2,
									"name": "Collection"
								}
							}
						},
						{
							"id": 131,
							"name": "size",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "C:/Users/cutie/AppData/Roaming/npm/node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"line": 28,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.size"
							}
						},
						{
							"id": 3,
							"name": "[Symbol.species]",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "C:/Users/cutie/AppData/Roaming/npm/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
									"line": 317,
									"character": 29
								}
							],
							"type": {
								"type": "reference",
								"name": "MapConstructor"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.__@species"
							}
						},
						{
							"id": 14,
							"name": "empty",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Returns if this [[`Collection`]] is empty or not"
							},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 70,
									"character": 11
								}
							],
							"getSignature": [
								{
									"id": 15,
									"name": "empty",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if this [[`Collection`]] is empty or not"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 132,
							"name": "[Symbol.iterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 133,
									"name": "[Symbol.iterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of entries in the map."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.__@iterator"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.__@iterator"
							}
						},
						{
							"id": 107,
							"name": "clear",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 108,
									"name": "clear",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.clear"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.clear"
							}
						},
						{
							"id": 109,
							"name": "delete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "delete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 111,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.delete"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.delete"
							}
						},
						{
							"id": 75,
							"name": "emplace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 390,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 76,
									"name": "emplace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Computes a value if it's absent in this Collection"
									},
									"parameters": [
										{
											"id": 77,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The key to find"
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 78,
											"name": "insert",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Item to add when it doesn't exist\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 79,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 80,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																}
															]
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "V"
									}
								}
							]
						},
						{
							"id": 134,
							"name": "entries",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 135,
									"name": "entries",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of key, value pairs for every entry in the map."
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												]
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.entries"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.entries"
							}
						},
						{
							"id": 16,
							"name": "filter",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 83,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 17,
									"name": "filter",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use a predicate function to filter out values and return a new Array of the values\nthat resolved true in the predicate function. Use Collection#filterKeys to filter\nout any keys if needed.",
										"returns": "A new Array of the values that returned `true` in the predicate function\n"
									},
									"typeParameter": [
										{
											"id": 18,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"parameters": [
										{
											"id": 19,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function to filter out"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ThisArg"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Predicate"
											}
										},
										{
											"id": 20,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An additional `this` context if needed"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "V"
										}
									}
								}
							]
						},
						{
							"id": 21,
							"name": "filterKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 110,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 22,
									"name": "filterKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use a predicate function to filter out keys and return a new Array of the keys\nthat resolved true in the predicate function. Use Collection#filter to filter out\nany values from this [[`Collection`]].",
										"returns": "A new Array of the values that returned `true` in the predicate function\n"
									},
									"typeParameter": [
										{
											"id": 23,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"parameters": [
										{
											"id": 24,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function to filter out"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ThisArg"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Predicate"
											}
										},
										{
											"id": 25,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An additional `this` context if needed"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "K"
										}
									}
								}
							]
						},
						{
							"id": 65,
							"name": "find",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 335,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 66,
									"name": "find",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Find a value in the collection from it's predicate function",
										"returns": "The value found or `null` if not found\n"
									},
									"typeParameter": [
										{
											"id": 67,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"parameters": [
										{
											"id": 68,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ThisArg"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "MinimalPredicate"
											}
										},
										{
											"id": 69,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An additional `this` context if needed"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								}
							]
						},
						{
							"id": 70,
							"name": "findKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 363,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 71,
									"name": "findKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds a key in the collection from it's predicate function",
										"returns": "The key found or `null` if not found\n"
									},
									"typeParameter": [
										{
											"id": 72,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"parameters": [
										{
											"id": 73,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ThisArg"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "MinimalPredicate"
											}
										},
										{
											"id": 74,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An additional `this` context if needed"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "K"
											}
										]
									}
								}
							]
						},
						{
							"id": 39,
							"name": "first",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 188,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 40,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the first element in the collection"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								},
								{
									"id": 41,
									"name": "first",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an Array of the values from the correspondant `amount`"
									},
									"parameters": [
										{
											"id": 42,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount to fetch from\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "V"
										}
									}
								}
							]
						},
						{
							"id": 51,
							"name": "firstKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 264,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 52,
									"name": "firstKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the first key in the collection"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "K"
											}
										]
									}
								},
								{
									"id": 53,
									"name": "firstKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an Array of the keys from the correspondant `amount`"
									},
									"parameters": [
										{
											"id": 54,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount to fetch from\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "K"
										}
									}
								}
							]
						},
						{
							"id": 112,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 113,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 114,
											"name": "callbackfn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 115,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 116,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 117,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 118,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 119,
																	"name": "map",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "K"
																			},
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "Map"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 120,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.forEach"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.forEach"
							}
						},
						{
							"id": 121,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 122,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 123,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.get"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.get"
							}
						},
						{
							"id": 124,
							"name": "has",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "has",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 126,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.has"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.has"
							}
						},
						{
							"id": 136,
							"name": "keys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 137,
									"name": "keys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of keys in the map"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.keys"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.keys"
							}
						},
						{
							"id": 43,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 216,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 44,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last element in the collection"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								},
								{
									"id": 45,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an Array of the values from the correspondant `amount`"
									},
									"parameters": [
										{
											"id": 46,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount to fetch from\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "V"
										}
									}
								}
							]
						},
						{
							"id": 47,
							"name": "lastKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 240,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 48,
									"name": "lastKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last element in the collection"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "K"
											}
										]
									}
								},
								{
									"id": 49,
									"name": "lastKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns an Array of the values from the correspondant `amount`"
									},
									"parameters": [
										{
											"id": 50,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The amount to fetch from\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "K"
										}
									}
								}
							]
						},
						{
							"id": 26,
							"name": "map",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 134,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 27,
									"name": "map",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Use a predicate function to map anything into a new array",
										"returns": "A new Array of the values from that function\n"
									},
									"typeParameter": [
										{
											"id": 28,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										},
										{
											"id": 29,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 2,
												"typeArguments": [
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "V"
													}
												],
												"name": "Collection"
											}
										}
									],
									"parameters": [
										{
											"id": 30,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function to map out and return a new array"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "ThisArg"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "K"
													},
													{
														"type": "reference",
														"name": "S"
													}
												],
												"name": "Predicate"
											}
										},
										{
											"id": 31,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "An additional `this` context if needed"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "S"
										}
									}
								}
							]
						},
						{
							"id": 32,
							"name": "random",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 159,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 33,
									"name": "random",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns a random value from the collection",
										"returns": "A random value or `null` if the collection is empty\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								}
							]
						},
						{
							"id": 34,
							"name": "reduce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 171,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 35,
									"name": "reduce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Reduce the collection and return a new initial value"
									},
									"typeParameter": [
										{
											"id": 36,
											"name": "S",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 37,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function"
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 2,
														"typeArguments": [
															{
																"type": "reference",
																"name": "K"
															},
															{
																"type": "reference",
																"name": "V"
															}
														],
														"name": "Collection"
													},
													{
														"type": "reference",
														"name": "V"
													},
													{
														"type": "reference",
														"name": "S"
													},
													{
														"type": "reference",
														"name": "S"
													}
												],
												"name": "ReducePredicate"
											}
										},
										{
											"id": 38,
											"name": "initialValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The initial value\n"
											},
											"type": {
												"type": "reference",
												"name": "S"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "S"
									}
								}
							]
						},
						{
							"id": 127,
							"name": "set",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "set",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 129,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "K"
											}
										},
										{
											"id": 130,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "V"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"typeArguments": [
											{
												"type": "reference",
												"name": "K"
											},
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "Collection"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.set"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.set"
							}
						},
						{
							"id": 59,
							"name": "shift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 306,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 60,
									"name": "shift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the first item in the collection and removes it (if provided)"
									},
									"parameters": [
										{
											"id": 61,
											"name": "remove",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "If we should remove it or not\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								}
							]
						},
						{
							"id": 95,
							"name": "some",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 435,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 96,
									"name": "some",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to [Array.some], this function tests whether atleast 1 item\nin the predicate function passes the test in the values cache.",
										"returns": "A boolean value if 1 item of the cache is truthy\n"
									},
									"parameters": [
										{
											"id": 97,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The function to use to filter out"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 98,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 99,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 100,
																	"name": "item",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 101,
							"name": "someKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 452,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 102,
									"name": "someKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to [Array.some], this functions tests whether atleast 1 key\nin the predicate function passes the test in the key cache.",
										"returns": "A boolean value if 1 item of the cache is truthy\n"
									},
									"parameters": [
										{
											"id": 103,
											"name": "func",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The function to use to filter out"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 104,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 105,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 106,
																	"name": "item",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 81,
							"name": "sort",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 407,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 82,
									"name": "sort",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to [Array.sort], which basically sorts the values of this Collection\nto return a value",
										"returns": "The value\n"
									},
									"parameters": [
										{
											"id": 83,
											"name": "compareFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The compare function"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 84,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 85,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 86,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																},
																{
																	"id": 87,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "V"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "V"
										}
									}
								}
							]
						},
						{
							"id": 88,
							"name": "sortKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 421,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 89,
									"name": "sortKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Similar to [Array.sort], which basically sorts the values of this Collection\nto return a value",
										"returns": "The value\n"
									},
									"parameters": [
										{
											"id": 90,
											"name": "compareFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The compare function"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 91,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 92,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 93,
																	"name": "a",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																},
																{
																	"id": 94,
																	"name": "b",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "K"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "K"
										}
									}
								}
							]
						},
						{
							"id": 55,
							"name": "toArray",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 291,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 56,
									"name": "toArray",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all of the values as an Array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "V"
										}
									}
								}
							]
						},
						{
							"id": 57,
							"name": "toKeyArray",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 298,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 58,
									"name": "toKeyArray",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns all of the keys as an Array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "K"
										}
									}
								}
							]
						},
						{
							"id": 62,
							"name": "unshift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Collection.ts",
									"line": 319,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 63,
									"name": "unshift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Gets the last item in the collection and removes it(if provided)"
									},
									"parameters": [
										{
											"id": 64,
											"name": "remove",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "If we should remove it or not\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "V"
											}
										]
									}
								}
							]
						},
						{
							"id": 138,
							"name": "values",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 139,
									"name": "values",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Returns an iterable of values in the map"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "V"
											}
										],
										"name": "IterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Map.values"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Map.values"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								140,
								13,
								131,
								3
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								14
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								132,
								107,
								109,
								75,
								134,
								16,
								21,
								65,
								70,
								39,
								51,
								112,
								121,
								124,
								136,
								43,
								47,
								26,
								32,
								34,
								127,
								59,
								95,
								101,
								81,
								88,
								55,
								57,
								62,
								138
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Collection.ts",
							"line": 66,
							"character": 23
						}
					],
					"typeParameter": [
						{
							"id": 141,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The key structure for this [[Collection]]"
							}
						},
						{
							"id": 142,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The value structure for this [[Collection]]\n"
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "K"
								},
								{
									"type": "reference",
									"name": "V"
								}
							],
							"name": "Map"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Collection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 145,
			"name": "Queue",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 146,
					"name": "Queue",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a [[Queue]] class, which handles queue-based systems in a simple class."
					},
					"children": [
						{
							"id": 147,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 148,
									"name": "new Queue",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Represents a [[Queue]] class, which handles queue-based systems in a simple class."
									},
									"typeParameter": [
										{
											"id": 149,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 150,
											"name": "items",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The items to inject when creating a new instance\n"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "T"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 146,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 157,
							"name": "add",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Pushes a new item at the end of the callstack",
								"tags": [
									{
										"tag": "notice",
										"text": "This is for backwards compatibility for Queue.add from 0.x"
									},
									{
										"tag": "param",
										"text": "The item to push",
										"param": "item"
									},
									{
										"tag": "returns",
										"text": "The size of this [[Queue]]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 47,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 158,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 159,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 160,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						},
						{
							"id": 153,
							"name": "addFirst",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"comment": {
								"shortText": "Inserts a new element at the start of the callstack",
								"tags": [
									{
										"tag": "notice",
										"text": "This is for backwards compatibility for Queue.add from 0.x"
									},
									{
										"tag": "param",
										"text": "The item to push",
										"param": "item"
									},
									{
										"tag": "returns",
										"text": "The size of this [[Queue]]\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 154,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 155,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 156,
													"name": "item",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "T"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						},
						{
							"id": 151,
							"name": "constructor",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 30,
									"character": 24
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 146,
									"name": "Queue"
								}
							}
						},
						{
							"id": 161,
							"name": "empty",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"comment": {
								"shortText": "Returns if this [[`Queue`]] is empty or not"
							},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 87,
									"character": 11
								}
							],
							"getSignature": [
								{
									"id": 162,
									"name": "empty",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Returns if this [[`Queue`]] is empty or not"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 205,
							"name": "[Symbol.iterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 208,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 206,
									"name": "[Symbol.iterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 208,
													"name": "next",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 209,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"signatures": [
																{
																	"id": 210,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 211,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 213,
																					"name": "done",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					},
																					"defaultValue": "..."
																				},
																				{
																					"id": 212,
																					"name": "value",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"type": {
																						"type": "reference",
																						"name": "T"
																					},
																					"defaultValue": "..."
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"kind": 1024,
																					"children": [
																						213,
																						212
																					]
																				}
																			]
																		}
																	}
																}
															]
														}
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														208
													]
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 194,
							"name": "clone",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 190,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 195,
									"name": "clone",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Clones a new [[Queue]] instance with the items available"
									},
									"type": {
										"type": "reference",
										"id": 146,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 173,
							"name": "find",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 129,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 174,
									"name": "find",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Finds an item in the cache or returns `undefined` if not found"
									},
									"parameters": [
										{
											"id": 175,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 176,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 177,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 178,
																	"name": "item",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							]
						},
						{
							"id": 196,
							"name": "forEach",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 199,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 197,
									"name": "forEach",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Perform a specific action from it's [[predicate]] function"
									},
									"typeParameter": [
										{
											"id": 198,
											"name": "ThisArg",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"default": {
												"type": "reference",
												"id": 146,
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Queue"
											}
										}
									],
									"parameters": [
										{
											"id": 199,
											"name": "predicate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The predicate function"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 200,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 201,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 202,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "T"
																	}
																},
																{
																	"id": 203,
																	"name": "index",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 204,
											"name": "thisArg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A custom `this` context for the predicate\n"
											},
											"type": {
												"type": "reference",
												"name": "ThisArg"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 183,
							"name": "get",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 152,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "get",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the value or `null` if not found",
										"returns": "A value if it didn't return null\n"
									},
									"parameters": [
										{
											"id": 185,
											"name": "index",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The index to peek at"
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							]
						},
						{
							"id": 189,
							"name": "includes",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 176,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "includes",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks if the key is included in the cache"
									},
									"parameters": [
										{
											"id": 191,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The key to find\n"
											},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 181,
							"name": "last",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 143,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 182,
									"name": "last",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last value of the cache"
									},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							]
						},
						{
							"id": 171,
							"name": "pop",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 121,
									"character": 5
								}
							],
							"signatures": [
								{
									"id": 172,
									"name": "pop",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the last item in the cache and removes it from the cache"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							]
						},
						{
							"id": 163,
							"name": "push",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 96,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 164,
									"name": "push",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Pushes a new item at the end of the callstack",
										"returns": "The size of this [[Queue]]\n"
									},
									"parameters": [
										{
											"id": 165,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The item to push"
											},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 186,
							"name": "remove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 165,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "remove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes the item from the queue",
										"tags": [
											{
												"tag": "warning",
												"text": "Use `Queue#tick` to remove all items!"
											}
										]
									},
									"parameters": [
										{
											"id": 188,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The item to remove\n"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 146,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "Queue"
									}
								}
							]
						},
						{
							"id": 169,
							"name": "shift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 114,
									"character": 7
								}
							],
							"signatures": [
								{
									"id": 170,
									"name": "shift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the first item in the cache and removes it from the cache"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							]
						},
						{
							"id": 192,
							"name": "size",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 183,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "size",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the size of this [[Queue]]"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 179,
							"name": "toArray",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 136,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 180,
									"name": "toArray",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Returns the the queued items as an Array"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								}
							]
						},
						{
							"id": 166,
							"name": "unshift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "src/Queue.ts",
									"line": 106,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 167,
									"name": "unshift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Inserts a new element at the start of the callstack",
										"returns": "The size of this [[Queue]]\n"
									},
									"parameters": [
										{
											"id": 168,
											"name": "item",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The item to push"
											},
											"type": {
												"type": "reference",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								147
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								157,
								153,
								151
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								161
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								205,
								194,
								173,
								196,
								183,
								189,
								181,
								171,
								163,
								186,
								169,
								192,
								179,
								166
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Queue.ts",
							"line": 29,
							"character": 18
						}
					],
					"typeParameter": [
						{
							"id": 214,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {
								"shortText": "The structure of this [[Queue]] instance\n"
							},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Queue.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 143,
			"name": "index",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 233,
					"name": "Collection",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2
				},
				{
					"id": 234,
					"name": "Queue",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 146
				},
				{
					"id": 144,
					"name": "version",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Returns the version for `@augu/collections`"
					},
					"sources": [
						{
							"fileName": "src/index.ts",
							"line": 28,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						233,
						234
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						144
					]
				}
			],
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 215,
			"name": "utils",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"shortText": "Copyright (c) Noelware",
				"text": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
			},
			"children": [
				{
					"id": 222,
					"name": "deprecate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 47,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 223,
							"name": "deprecate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deprecates a method if it's no longer gonna be updated"
							},
							"parameters": [
								{
									"id": 224,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The method that is deprecated\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 219,
					"name": "isArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 39,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 220,
							"name": "isArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if [[`value`]] is an Array or not",
								"returns": "If the value is an Array or not.\n"
							},
							"parameters": [
								{
									"id": 221,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The value to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							}
						}
					]
				},
				{
					"id": 216,
					"name": "isObject",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 28,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 217,
							"name": "isObject",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Checks if [[`value`]] is a object or not",
								"returns": "If the value is a object or not.\n"
							},
							"parameters": [
								{
									"id": 218,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The value to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						}
					]
				},
				{
					"id": 228,
					"name": "removeArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 83,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "removeArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes a item from the array by it's index or value",
								"returns": "The array that was updated or not\n"
							},
							"typeParameter": [
								{
									"id": 230,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 231,
									"name": "arr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The array to check from"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								},
								{
									"id": 232,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The index or value to remove"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "T"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						}
					]
				},
				{
					"id": 225,
					"name": "stringify",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/utils.ts",
							"line": 56,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "stringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Stringifies a JavaScript object or primitive",
								"returns": "The stringified value\n"
							},
							"parameters": [
								{
									"id": 227,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The value to check"
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						222,
						219,
						216,
						228,
						225
					]
				}
			],
			"sources": [
				{
					"fileName": "src/utils.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				145,
				143,
				215
			]
		}
	]
}